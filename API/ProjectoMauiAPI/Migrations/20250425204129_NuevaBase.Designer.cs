// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectoMauiAPI.Data;

#nullable disable

namespace ProjectoMauiAPI.Migrations
{
    [DbContext(typeof(DemoDbContext))]
    [Migration("20250425204129_NuevaBase")]
    partial class NuevaBase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectoMauiAPI.Models.Entities.Agente", b =>
                {
                    b.Property<int>("IdAgente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdAgente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAgente"));

                    b.Property<string>("ApellidoAgente")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ApellidoAgente");

                    b.Property<string>("CedulaAgente")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CedulaAgente");

                    b.Property<int>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("IdRol");

                    b.Property<string>("NombreAgente")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NombreAgente");

                    b.Property<string>("TelefonoAgente")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TelefonoAgente");

                    b.HasKey("IdAgente");

                    b.HasIndex("IdRol");

                    b.ToTable("Agentes");
                });

            modelBuilder.Entity("ProjectoMauiAPI.Models.Entities.Archivo", b =>
                {
                    b.Property<int>("IdArchivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdArchivo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdArchivo"));

                    b.Property<int>("IdMensaje")
                        .HasColumnType("int")
                        .HasColumnName("IdMensaje");

                    b.Property<string>("NombreArchivo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NombreArchivo");

                    b.Property<string>("RutaArchivo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RutaArchivo");

                    b.Property<string>("TipoArchivo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TipoArchivo");

                    b.HasKey("IdArchivo");

                    b.HasIndex("IdMensaje");

                    b.ToTable("Archivos");
                });

            modelBuilder.Entity("ProjectoMauiAPI.Models.Entities.Caso", b =>
                {
                    b.Property<int>("IdCaso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCaso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCaso"));

                    b.Property<string>("DescripcionCaso")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("DescripcionCaso");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaActualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaCreacion");

                    b.Property<DateTime?>("FechaFinalizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaFinalizacion");

                    b.Property<int>("IdAgente")
                        .HasColumnType("int")
                        .HasColumnName("IdAgente");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int")
                        .HasColumnName("IdEstado");

                    b.Property<int>("IdSeveridad")
                        .HasColumnType("int")
                        .HasColumnName("IdSeveridad");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("IdUsuario");

                    b.HasKey("IdCaso");

                    b.HasIndex("IdAgente");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdSeveridad");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Casos");
                });

            modelBuilder.Entity("ProjectoMauiAPI.Models.Entities.EstadoCaso", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdEstado");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstado"));

                    b.Property<string>("DescripcionEstado")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DescripcionEstado");

                    b.HasKey("IdEstado");

                    b.ToTable("EstadosCaso");
                });

            modelBuilder.Entity("ProjectoMauiAPI.Models.Entities.Grupo", b =>
                {
                    b.Property<int>("IdGrupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdGrupo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGrupo"));

                    b.Property<string>("DescripcionGrupo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DescripcionGrupo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaCreacion");

                    b.HasKey("IdGrupo");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("ProjectoMauiAPI.Models.Entities.Mensaje", b =>
                {
                    b.Property<int>("IdMensaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdMensaje");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMensaje"));

                    b.Property<string>("DescripcionMensaje")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DescripcionMensaje");

                    b.Property<DateTime>("FechaMensaje")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaMensaje");

                    b.Property<int?>("IdCaso")
                        .HasColumnType("int")
                        .HasColumnName("IdCaso");

                    b.Property<int?>("IdGrupo")
                        .HasColumnType("int")
                        .HasColumnName("IdGrupo");

                    b.Property<int>("IdTipoMensaje")
                        .HasColumnType("int")
                        .HasColumnName("IdTipoMensaje");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("IdUsuario");

                    b.HasKey("IdMensaje");

                    b.HasIndex("IdCaso");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdTipoMensaje");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Mensajes");
                });

            modelBuilder.Entity("ProjectoMauiAPI.Models.Entities.Notificacion", b =>
                {
                    b.Property<int>("IdNotificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdNotificacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNotificacion"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("Fecha");

                    b.Property<int?>("IdCaso")
                        .HasColumnType("int")
                        .HasColumnName("IdCaso");

                    b.Property<int?>("IdMensaje")
                        .HasColumnType("int")
                        .HasColumnName("IdMensaje");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("IdUsuario");

                    b.Property<string>("TipoNotificacion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TipoNotificacion");

                    b.HasKey("IdNotificacion");

                    b.HasIndex("IdCaso");

                    b.HasIndex("IdMensaje");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Notificaciones");
                });

            modelBuilder.Entity("ProjectoMauiAPI.Models.Entities.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdRol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("DescripcionRol")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DescripcionRol");

                    b.Property<string>("TipoRol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TipoRol");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ProjectoMauiAPI.Models.Entities.Severidad", b =>
                {
                    b.Property<int>("IdSeveridad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdSeveridad");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSeveridad"));

                    b.Property<string>("DescripcionSeveridad")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DescripcionSeveridad");

                    b.Property<int?>("TipoSeveridad")
                        .HasColumnType("int")
                        .HasColumnName("TipoSeveridad");

                    b.HasKey("IdSeveridad");

                    b.ToTable("Severidades");
                });

            modelBuilder.Entity("ProjectoMauiAPI.Models.Entities.TipoMensaje", b =>
                {
                    b.Property<int>("IdTipoMensaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdTipoMensaje");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoMensaje"));

                    b.Property<string>("FormatoMensaje")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FormatoMensaje");

                    b.HasKey("IdTipoMensaje");

                    b.ToTable("TipoMensajes");
                });

            modelBuilder.Entity("ProjectoMauiAPI.Models.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("ApellidoUsuario")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ApellidoUsuario");

                    b.Property<string>("CedulaUsuario")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CedulaUsuario");

                    b.Property<string>("CodigoCasa")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("CodigoCasa");

                    b.Property<string>("ContrasenaUsuario")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ContrasenaUsuario");

                    b.Property<string>("CorreoUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CorreoUsuario");

                    b.Property<string>("NombreUsuario")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NombreUsuario");

                    b.Property<string>("TelefonoUsuario")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TelefonoUsuario");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProjectoMauiAPI.Models.Entities.UsuarioGrupo", b =>
                {
                    b.Property<int>("IdUsuarioGrupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdUsuarioGrupo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuarioGrupo"));

                    b.Property<int?>("IdGrupo")
                        .HasColumnType("int")
                        .HasColumnName("IdGrupo");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("IdUsuario");

                    b.HasKey("IdUsuarioGrupo");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("UsuarioGrupos");
                });

            modelBuilder.Entity("ProjectoMauiAPI.Models.Entities.Agente", b =>
                {
                    b.HasOne("ProjectoMauiAPI.Models.Entities.Rol", "Rol")
                        .WithMany("Agentes")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ProjectoMauiAPI.Models.Entities.Archivo", b =>
                {
                    b.HasOne("ProjectoMauiAPI.Models.Entities.Mensaje", "Mensaje")
                        .WithMany()
                        .HasForeignKey("IdMensaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mensaje");
                });

            modelBuilder.Entity("ProjectoMauiAPI.Models.Entities.Caso", b =>
                {
                    b.HasOne("ProjectoMauiAPI.Models.Entities.Agente", "Agente")
                        .WithMany()
                        .HasForeignKey("IdAgente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectoMauiAPI.Models.Entities.EstadoCaso", "EstadoCaso")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectoMauiAPI.Models.Entities.Severidad", "Severidad")
                        .WithMany()
                        .HasForeignKey("IdSeveridad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectoMauiAPI.Models.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agente");

                    b.Navigation("EstadoCaso");

                    b.Navigation("Severidad");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProjectoMauiAPI.Models.Entities.Mensaje", b =>
                {
                    b.HasOne("ProjectoMauiAPI.Models.Entities.Caso", "Caso")
                        .WithMany()
                        .HasForeignKey("IdCaso");

                    b.HasOne("ProjectoMauiAPI.Models.Entities.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("IdGrupo");

                    b.HasOne("ProjectoMauiAPI.Models.Entities.TipoMensaje", "TipoMensaje")
                        .WithMany()
                        .HasForeignKey("IdTipoMensaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectoMauiAPI.Models.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caso");

                    b.Navigation("Grupo");

                    b.Navigation("TipoMensaje");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProjectoMauiAPI.Models.Entities.Notificacion", b =>
                {
                    b.HasOne("ProjectoMauiAPI.Models.Entities.Caso", "Caso")
                        .WithMany()
                        .HasForeignKey("IdCaso");

                    b.HasOne("ProjectoMauiAPI.Models.Entities.Mensaje", "Mensaje")
                        .WithMany()
                        .HasForeignKey("IdMensaje");

                    b.HasOne("ProjectoMauiAPI.Models.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caso");

                    b.Navigation("Mensaje");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProjectoMauiAPI.Models.Entities.UsuarioGrupo", b =>
                {
                    b.HasOne("ProjectoMauiAPI.Models.Entities.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("IdGrupo");

                    b.HasOne("ProjectoMauiAPI.Models.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario");

                    b.Navigation("Grupo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProjectoMauiAPI.Models.Entities.Rol", b =>
                {
                    b.Navigation("Agentes");
                });
#pragma warning restore 612, 618
        }
    }
}
